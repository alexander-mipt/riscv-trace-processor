/*
 * This file is autogenerated by 'cmdgen.py' script from .yaml file
 * Do not try to change anything in this file
 * If you need to change code - change script/markdown file
 ***********************************************************
 * Written by Derzhavin Andrey (derzhavin3016) && Khaydari Farid (Tako-San) && Antipov Alexander
 */

void do_BEQ(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_BNE(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_BLT(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_BGE(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_BLTU(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_BGEU(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_JALR(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_JAL(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_LUI(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AUIPC(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_ADDI(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SLLI(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SLTI(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SLTIU(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_XORI(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SRLI(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SRAI(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_ORI(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_ANDI(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_ADD(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SUB(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SLL(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SLT(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SLTU(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_XOR(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SRL(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SRA(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_OR(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AND(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_ADDIW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SLLIW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SRLIW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SRAIW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_ADDW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SUBW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SLLW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SRLW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SRAW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_LB(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_LH(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_LW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_LD(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_LBU(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_LHU(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_LWU(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SB(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SH(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SD(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FENCE(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FENCE_I(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_MUL(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_MULH(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_MULHSU(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_MULHU(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_DIV(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_DIVU(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_REM(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_REMU(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_MULW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_DIVW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_DIVUW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_REMW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_REMUW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOADD_W(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOXOR_W(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOOR_W(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOAND_W(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOMIN_W(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOMAX_W(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOMINU_W(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOMAXU_W(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOSWAP_W(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_LR_W(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SC_W(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOADD_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOXOR_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOOR_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOAND_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOMIN_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOMAX_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOMINU_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOMAXU_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_AMOSWAP_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_LR_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SC_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_ECALL(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_EBREAK(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_URET(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SRET(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_MRET(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_DRET(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_SFENCE_VMA(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_WFI(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_CSRRW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_CSRRS(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_CSRRC(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_CSRRWI(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_CSRRSI(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_CSRRCI(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_HFENCE_VVMA(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_HFENCE_GVMA(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FADD_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSUB_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMUL_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FDIV_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSGNJ_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSGNJN_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSGNJX_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMIN_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMAX_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSQRT_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FADD_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSUB_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMUL_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FDIV_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSGNJ_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSGNJN_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSGNJX_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMIN_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMAX_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_S_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_D_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSQRT_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FADD_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSUB_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMUL_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FDIV_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSGNJ_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSGNJN_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSGNJX_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMIN_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMAX_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_S_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_Q_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_D_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_Q_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSQRT_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FLE_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FLT_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FEQ_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FLE_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FLT_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FEQ_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FLE_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FLT_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FEQ_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_W_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_WU_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_L_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_LU_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMV_X_W(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCLASS_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_W_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_WU_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_L_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_LU_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMV_X_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCLASS_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_W_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_WU_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_L_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_LU_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMV_X_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCLASS_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_S_W(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_S_WU(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_S_L(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_S_LU(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMV_W_X(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_D_W(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_D_WU(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_D_L(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_D_LU(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMV_D_X(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_Q_W(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_Q_WU(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_Q_L(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FCVT_Q_LU(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMV_Q_X(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FLW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FLD(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FLQ(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSW(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSD(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FSQ(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMADD_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMSUB_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FNMSUB_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FNMADD_S(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMADD_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMSUB_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FNMSUB_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FNMADD_D(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMADD_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FMSUB_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FNMSUB_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

void do_FNMADD_Q(Context, Instr)
{
    common_routine(Context, Instr);
     std::cerr << __func__ << " NOT IMPLEMENTED YET" << std:: endl;
}

